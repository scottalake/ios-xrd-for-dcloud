[global_tags]
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "cisco"
  omit_hostname = true

# [[inputs.ping]]
# urls = ["xrd-1","xrd-2"]
# [inputs.ping.tags]
# plugin_source = "ping"

[[outputs.file]]
  files = ["stdout", "/tmp/metrics.out"]
  rotation_max_size = "100MB"
  rotation_max_archives = 3
  data_format = "json"
# [[outputs.influxdb_v2]]
#   urls = ["http://telemetry_influxdb_1:8086"]
#   token = "MySecretToken"
#   organization = "Cisco"
#   bucket = "init_bucket"

 [[inputs.gnmi]]
  ## Address and port of the gNMI GRPC server
  addresses = ["xrd-1:57777"]

  ## define credentials
  username = "cisco"
  password = "cisco123"

  ## gNMI encoding requested (one of: "proto", "json", "json_ietf", "bytes")
  # encoding = "proto"

  ## redial in case of failures after
  redial = "10s"

  ## enable client-side TLS and define CA to authenticate the device
  # enable_tls = true
  # tls_ca = "/etc/telegraf/ca.pem"
  # insecure_skip_verify = true

  ## define client-side TLS certificate & key to authenticate to the device
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"

  ## gNMI subscription prefix (optional, can usually be left empty)
  ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
  # origin = ""
  # prefix = ""
  # target = ""

  ## Define additional aliases to map telemetry encoding paths to simple measurement names
  # [inputs.gnmi.aliases]
  #   ifcounters = "openconfig:/interfaces/interface/state/counters"

  [[inputs.gnmi.subscription]]
    ## Name of the measurement that will be emitted
    name = "xrd-1-ifcounters"

    ## Origin and path of the subscription
    ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
    ##
    ## origin usually refers to a (YANG) data model implemented by the device
    ## and path to a specific substructure inside it that should be subscribed to (similar to an XPath)
    ## YANG models can be found e.g. here: https://github.com/YangModels/yang/tree/master/vendor/cisco/xr
    origin = "openconfig-interfaces"
    path = "/interfaces/interface/state/counters"

    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
    subscription_mode = "sample"
    sample_interval = "3s"

    ## Suppress redundant transmissions when measured values are unchanged
    # suppress_redundant = false

    ## If suppression is enabled, send updates at least every X seconds anyway
    # heartbeat_interval = "60s"
  [inputs.gnmi.tags]
    tag4 = "gnmi_tag"

[[inputs.gnmi]]
  ## Address and port of the gNMI GRPC server
  addresses = ["xrd-2:57777"]

  ## define credentials
  username = "cisco"
  password = "cisco123"

  ## gNMI encoding requested (one of: "proto", "json", "json_ietf", "bytes")
  # encoding = "proto"

  ## redial in case of failures after
  redial = "10s"

  ## enable client-side TLS and define CA to authenticate the device
  # enable_tls = true
  # tls_ca = "/etc/telegraf/ca.pem"
  # insecure_skip_verify = true

  ## define client-side TLS certificate & key to authenticate to the device
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"

  ## gNMI subscription prefix (optional, can usually be left empty)
  ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
  # origin = ""
  # prefix = ""
  # target = ""

  ## Define additional aliases to map telemetry encoding paths to simple measurement names
  # [inputs.gnmi.aliases]
  #   ifcounters = "openconfig:/interfaces/interface/state/counters"

  [[inputs.gnmi.subscription]]
    ## Name of the measurement that will be emitted
    name = "xrd-2-ifcounters"

    ## Origin and path of the subscription
    ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
    ##
    ## origin usually refers to a (YANG) data model implemented by the device
    ## and path to a specific substructure inside it that should be subscribed to (similar to an XPath)
    ## YANG models can be found e.g. here: https://github.com/YangModels/yang/tree/master/vendor/cisco/xr
    origin = "openconfig-interfaces"
    path = "/interfaces/interface/state/counters"

    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
    subscription_mode = "sample"
    sample_interval = "3s"

    ## Suppress redundant transmissions when measured values are unchanged
    # suppress_redundant = false

    ## If suppression is enabled, send updates at least every X seconds anyway
    # heartbeat_interval = "60s"
  [inputs.gnmi.tags]
    tag4 = "gnmi_tag"


######################################################################################################################

# [[inputs.gnmi]]
#   ## Address and port of the gNMI GRPC server
#   addresses = ["xrd-1:57777"]

#   ## define credentials
#   # username = "admin"
#   # password = "Cisco!@3"
#   username = "cisco"
#   password = "cisco123"

#   ## gNMI encoding requested (one of: "proto", "json", "json_ietf", "bytes")
#   encoding = "json_ietf"

#   ## redial in case of failures after
#   redial = "10s"

#   ## enable client-side TLS and define CA to authenticate the device
#   # enable_tls = true
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # insecure_skip_verify = true

#   ## define client-side TLS certificate & key to authenticate to the device
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"

#   ## gNMI subscription prefix (optional, can usually be left empty)
#   ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
#   # origin = "rfc7951"
#   # # prefix = ""
#   # # target = ""

#   ## Define additional aliases to map telemetry encoding paths to simple measurement names
#   # [inputs.gnmi.aliases]
#   #   ifcounters = "openconfig:/interfaces/interface/state/counters"

#   [[inputs.gnmi.subscription]]
#     ## Name of the measurement that will be emitted
#     name = "interfaces"

#     ## Origin and path of the subscription
#     ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
#     ##
#     ## origin usually refers to a (YANG) data model implemented by the device
#     ## and path to a specific substructure inside it that should be subscribed to (similar to an XPath)
#     ## YANG models can be found e.g. here: https://github.com/YangModels/yang/tree/master/vendor/cisco/xr
#     origin = "legacy"
#     path = "/interfaces-ios-xe-oper:interfaces/interface"

#     # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
#     subscription_mode = "sample"
#     sample_interval = "120s"

#     ## Suppress redundant transmissions when measured values are unchanged
#     # suppress_redundant = false

#     ## If suppression is enabled, send updates at least every X seconds anyway
#     # heartbeat_interval = "60s"
#    [inputs.gnmi.tags]
#      tag4 = "gnmi_tag"

# [[inputs.gnmi]]
#   ## Address and port of the gNMI GRPC server
#   addresses = ["xrd-2:57777"]

#   ## define credentials
#   username = "cisco"
#   password = "cisco123"

#   ## gNMI encoding requested (one of: "proto", "json", "json_ietf", "bytes")
#   # encoding = "proto"

#   ## redial in case of failures after
#   redial = "10s"

#   ## enable client-side TLS and define CA to authenticate the device
#   # enable_tls = true
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # insecure_skip_verify = true

#   ## define client-side TLS certificate & key to authenticate to the device
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"

#   ## gNMI subscription prefix (optional, can usually be left empty)
#   ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
#   # origin = ""
#   # prefix = ""
#   # target = ""

#   ## Define additional aliases to map telemetry encoding paths to simple measurement names
#   # [inputs.gnmi.aliases]
#   #   ifcounters = "openconfig:/interfaces/interface/state/counters"

#   [[inputs.gnmi.subscription]]
#     ## Name of the measurement that will be emitted
#     name = "xrd-2-ifcounters"

#     ## Origin and path of the subscription
#     ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
#     ##
#     ## origin usually refers to a (YANG) data model implemented by the device
#     ## and path to a specific substructure inside it that should be subscribed to (similar to an XPath)
#     ## YANG models can be found e.g. here: https://github.com/YangModels/yang/tree/master/vendor/cisco/xr
#     origin = "openconfig-interfaces"
#     path = "/interfaces/interface/state/counters"

#     # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
#     subscription_mode = "sample"
#     sample_interval = "3s"

#     ## Suppress redundant transmissions when measured values are unchanged
#     # suppress_redundant = false

#     ## If suppression is enabled, send updates at least every X seconds anyway
#     # heartbeat_interval = "60s"
#    [inputs.gnmi.tags]
#      tag4 = "gnmi_tag"
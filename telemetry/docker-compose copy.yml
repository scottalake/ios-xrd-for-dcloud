version: '3'
services:
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ios-xr-streaming-telemetry-demo_mgmt
  influxdb:
    image: influxdb
    environment:
      - INFLUXDB_DATA_ENGINE=tsm1
      - INFLUXDB_REPORTING_DISABLED=false
      - INFLUXDB_ADMIN_ENABLED=true
      - DOCKER_INFLUXDB_INIT_USERNAME=influxdb
      - DOCKER_INFLUXDB_INIT_PASSWORD=cisco123
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=MySecretToken
      - DOCKER_INFLUXDB_INIT_ORG=Cisco
      - DOCKER_INFLUXDB_INIT_BUCKET=init_bucket
      - DOCKER_INFLUXDB_INIT_MODE=setup  
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
    volumes:
      - $TIG_DIRECTORY/influxdb/:/var/lib/influxdb2/:rw
      - $TIG_DIRECTORY/etc/influxdb/:/etc/influxdb2:rw
    ports:
      - 8086:8086
    networks:
      - ios-xr-streaming-telemetry-demo_mgmt
    healthcheck:
      test: ["CMD", "curl", "influxdb:8086/api/v2/ping"]
      interval: 1m
      timeout: 10s
      retries: 5      
  telegraf:
    image: telegraf
    ports:
      - 9273:9273
      - 57500:57500
    restart: always
    volumes:
      - $TIG_DIRECTORY/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - $TIG_DIRECTORY/telegraf/telegraf.d:/etc/telegraf/telegraf.d:ro
    networks:
      - ios-xr-streaming-telemetry-demo_mgmt
    depends_on:
      # - zookeeper
      # - kafka
      - influxdb
    entrypoint: /entrypoint.sh -config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d --debug
  grafana:
    image: grafana/grafana-oss
    ports:
      - 3000:3000
    volumes:
      - $TIG_DIRECTORY/grafana/grafana.ini:/etc/grafana/grafana.ini
      - $TIG_DIRECTORY/grafana/dashboards/:/etc/grafana/provisioning/dashboards
      - $TIG_DIRECTORY/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    networks:
      - ios-xr-streaming-telemetry-demo_mgmt
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: always
    depends_on:
      - influxdb      
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - ios-xr-streaming-telemetry-demo_mgmt
  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9092:9092"
    networks:
      - ios-xr-streaming-telemetry-demo_mgmt
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  
networks:
  ios-xr-streaming-telemetry-demo_mgmt:
    external: true

volumes:
    static-content:
    uwsgi:
  # yangsuite:
  #   image: yangsuite:latest
  #   build:
  #     context: ./yangsuite
  #     dockerfile: ./Dockerfile
  #   env_file:
  #     - ./yangsuite/setup.env
  #   command: /yangsuite/migrate_and_start.sh
  #   ports:
  #     # gNMI insecure port (IOS-XE)
  #     - "50052:50052"
  #     # gNMI insecure port (NX-OS)
  #     - "50051:50051"
  #     # gNMI secure port (IOS-XE, NX-OS)
  #     - "9339:9339"
  #     # gRPC MDT telemetry insecure port (IOS-XE)
  #     - "57344:57344"
  #     # gRPC MDT telemetry secure port (IOS-XE)
  #     - "57345:57345"
  #     # RESTCONF
  #     - "443:443"
  #   volumes:
  #     - static-content:/ys-static
  #     - uwsgi:/yangsuite/uwsgi
  #     - ./ys-data:/ys-data
  #   networks:
  #     - ios-xr-streaming-telemetry-demo_mgmt
  # nginx:
  #   image: nginx:latest
  #   build:
  #     context: ./nginx
  #     dockerfile: ./Dockerfile
  #   depends_on:
  #     - yangsuite
  #   ports:
  #     - "80:80"
  #     - "8443:8443"
  #   volumes:
  #     - static-content:/etc/nginx/html
  #     - uwsgi:/var/run/uwsgi
  #   networks:
  #     - ios-xr-streaming-telemetry-demo_mgmt
  # backup:
  #   image: backup:latest
  #   build:
  #     context: ./backup
  #     dockerfile: ./Dockerfile
  #   command: ['/code/run_cron.sh']
  #   depends_on:
  #     - yangsuite
  #   environment:
  #     - DATA_DIR=/ysdata
  #     - CRON_EXP=${YS_BACKUP_CRON:-*/30 * * * *}
  #     - NO_BACKUP=${YS_NO_BACKUP:-false}
  #     - MAX_BACKUP=${YS_MAX_BACKUP:-2}
  #   volumes:
  #     - ./ys-data:/ysdata
  #     - ./ys-backup:/backup
  #   networks:
  #     - ios-xr-streaming-telemetry-demo_mgmt


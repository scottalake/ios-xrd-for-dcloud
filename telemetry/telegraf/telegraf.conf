[global_tags]
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "cisco"
  omit_hostname = true


[[outputs.http]]
  url = "http://198.18.133.23:8088/services/collector"
  data_format="splunkmetric"
  splunkmetric_hec_routing=true
  [outputs.http.headers]
    Content-Type = "application/json"
    Authorization = "Splunk abcd1234"

[[outputs.file]]
  files = ["stdout", "/tmp/snmp.out"]
  rotation_max_size = "100MB"
  rotation_max_archives = 3
  data_format = "json"
  [outputs.file.tagpass]
    source = ["snmp"]

[[outputs.file]]
  files = ["stdout", "/tmp/gnmi.out"]
  rotation_max_size = "100MB"
  rotation_max_archives = 3
  data_format = "json"
  [outputs.file.tagpass]
    source = ["gnmi"]

[[outputs.file]]
  files = ["stdout", "/tmp/metrics.out"]
  rotation_max_size = "1MB"
  rotation_max_archives = 3
  data_format = "json"
  # [outputs.file.tagpass]
  #   source = ["ping"]


# [[inputs.snmp]]
#   agents = ["udp://198.18.133.1:161"]
#   version = 3
#   auth_password = "cisco123"
#   auth_protocol = "MD5"
#   priv_password = "cisco123"
#   priv_protocol = "DES"
#   sec_name = "cisco"
#   sec_level = "authPriv"
#   max_repetitions = 10
#   timeout = "10s"
#   retries = 1
#   name = "snmp"
  

#   [[inputs.snmp.field]]
#       oid = "SNMPv2-MIB::sysUpTime.0"
#       name = "uptime"
#     conversion = "float(2)"

#   [[inputs.snmp.field]]
#     oid = "SNMPv2-MIB::sysName.0"
#     name = "source"
#     is_tag = true

#   [[inputs.snmp.table]]
#     oid = "IF-MIB::ifTable"
#     name = "interface"
#     inherit_tags = ["source"]

#     [[inputs.snmp.table.field]]
#       oid = "IF-MIB::ifDescr"
#       name = "ifDescr"
#       is_tag = true

# [[inputs.snmp.table]]
#   oid = "CISCO-ENHANCED-MEMPOOL-MIB::cempMemPoolTable"
#   name = "cempMemPoolTable"
#   inherit_tags = ["source"]

#   # Specify the fields you want to collect
#   [[inputs.snmp.table.field]]
#     oid = "CISCO-ENHANCED-MEMPOOL-MIB::cempMemPoolUsed"
#     name = "cempMemPoolUsed"

#   # If you want to use the memory pool name as a tag for better identification
#   [[inputs.snmp.table.field]]
#     oid = "CISCO-ENHANCED-MEMPOOL-MIB::cempMemPoolName"
#     name = "cempMemPoolName"
#     is_tag = true


# [[inputs.snmp.table]]
#   oid = "BGP4-MIB::bgpPeerTable"
#     name = "bgpPeerTable"
#     inherit_tags = ["source"]

#   [[inputs.snmp.table.field]]
#   oid = "BGP4-MIB::bgpPeerLastError"
#   name = "bgpPeerLastError"

#   [[inputs.snmp.table.field]]
#   oid = "BGP4-MIB::bgpPeerInUpdates"
#   name = "bgpPeerInUpdates"

#   [[inputs.snmp.table.field]]
#   oid = "BGP4-MIB::bgpPeerOutUpdates"
#   name = "bgpPeerOutUpdates"

#   [[inputs.snmp.table.field]]
#   oid = "BGP4-MIB::bgpPeerState"
#   name = "bgpPeerState"

#   [[inputs.snmp.table.field]]
#   oid = "BGP4-MIB::bgpPeerRemoteAddr"
#   name = "bgpPeerRemoteAddr"

#   [[inputs.snmp.table]]
#     oid = "CISCO-BGP4-MIB::cbgpPeer2Table"
#     name = "cisco_bgp_peer"
#     inherit_tags = ["source"]
#     index_as_tag = true

#     [[inputs.snmp.table.field]]
#       oid = "CISCO-BGP4-MIB::cbgpPeer2State"
#       name = "sp_cbgpPeer2State"

#     [[inputs.snmp.table.field]]
#       oid = "CISCO-BGP4-MIB::cbgpPeer2RemoteIdentifier"
#       name = "cbgpPeer2RemoteIdentifier"
#       is_tag = true

#   [[inputs.snmp.table]]
#     oid = "CISCO-BGP4-MIB::cbgpPeer2AddrFamilyPrefixTable"
#     name = "cisco_bgp_prefix_table"
#     inherit_tags = ["source", "cbgpPeer2RemoteIdentifier"]
#     index_as_tag = true

#     [[inputs.snmp.table.field]]
#       oid = "CISCO-BGP4-MIB::cbgpPeer2AdvertisedPrefixes"
#       name = "cbgpPeer2AdvertisedPrefixes"

#     [[inputs.snmp.table.field]]
#       oid = "CISCO-BGP4-MIB::cbgpPeer2AcceptedPrefixes"
#       name = "cbgpPeer2AcceptedPrefixes"


# [[inputs.snmp.table]]
#   oid = "CISCO-PROCESS-MIB::cpmCPUTotalTable"
#   name = "cpmProcessExtRevTable"
#   inherit_tags = ["source"]

#   [[inputs.snmp.table.field]]
#     oid = "CISCO-PROCESS-MIB::cpmCPUTotal1minRev"
#     name = "OneMinuteCPU"

#   [[inputs.snmp.table.field]]
#     oid = "CISCO-PROCESS-MIB::cpmCPUTotal5minRev"
#     name = "FiveMinuteCPU"

#   [[inputs.snmp.table.field]]
#     oid = "CISCO-PROCESS-MIB::cpmCPUTotal15minRev"
#     name = "FifteenMinuteCPU"


# [[inputs.snmp.table]]
#   oid = "CISCO-PROCESS-MIB::cpmProcessExtRevTable"
#   name = "cpmProcessExtRevTable"
#   inherit_tags = ["source"]

#   # Specify the fields you want to collect
#   [[inputs.snmp.table.field]]
#   oid = "CISCO-PROCESS-MIB::cpmProcessName"
#     name = "cpmProcessName"

#   # Specify the fields you want to collect
#   [[inputs.snmp.table.field]]
#   oid = "CISCO-PROCESS-MIB::cpmProcessTextSegmentSize"
#     name = "cpmProcessTextSegmentSize"

#   # If you want to use the memory pool name as a tag for better identification
#   [[inputs.snmp.table.field]]
#   oid = "CISCO-PROCESS-MIB::cpmProcessDynamicMemorySize"
#     name = "cpmProcessDynamicMemorySize"

#   # Specify the fields you want to collect
#   [[inputs.snmp.table.field]]
#   oid = "CISCO-PROCESS-MIB::cpmProcessDataSegmentSize"
#     name = "cpmProcessDataSegmentSize"

#   # If you want to use the memory pool name as a tag for better identification
#   [[inputs.snmp.table.field]]
#   oid = "CISCO-PROCESS-MIB::cpmProcExtMemAllocatedRev"
#     name = "cpmProcExtMemAllocatedRev"

#   # If you want to use the memory pool name as a tag for better identification
#   [[inputs.snmp.table.field]]
#   oid = "CISCO-PROCESS-MIB::cpmProcExtMemFreedRev"
#     name = "cpmProcExtMemFreedRev"


#   [inputs.snmp.tags]
#     telegraf_tag =  "snmp"


 [[inputs.gnmi]]
  # addresses = ["xr-1:57400","xr-2:57400","xr-5:57400","xr-6:57400","xr-7:57400","xr-8:57400"]
  addresses = ["xr-1:57400"]

  ## define credentials
  username = "cisco"
  password = "cisco123"

  ## redial in case of failures after
  redial = "10s"

  # [[inputs.gnmi.subscription]]
  #   name = "ifcounters"
  #   origin = "openconfig-interfaces"
  #   path = "/interfaces/interface/state/counters"
  #   subscription_mode = "sample"
  #   sample_interval = "3s"

  [[inputs.gnmi.subscription]]
    name = "instanceSpecificBGPData"
    origin = "Cisco-IOS-XR-ipv4-bgp-oper"
    path = "/bgp/instances/instance[instance-name='default']/instance-active"
    subscription_mode = "sample"
    sample_interval = "10s"



gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
  --path "Cisco-IOS-XR-ipv4-bgp-oper:/bgp/instances/instance[instance-name='default']/instance-active" \
  --mode stream --stream-mode sample

gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
  --path "Cisco-IOS-XR-ipv4-bgp-oper/bgp/instances/instance[instance-name='default']/instance-active" \
  --mode stream --stream-mode sample


gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
  --path "/bgp/instances/instance[instance-name='default']/instance-active" \
  --mode stream --stream-mode sample

./gnmic --address 198.18.133.1:57400 --insecure -e json_ietf \
        --username cisco --password cisco123 \
        --file yang/vendor/cisco/xr/653/openconfig-interfaces.yang \
        --dir yang/standard/ietf/ \
        --exclude ietf-interfaces \
        prompt



  # [[inputs.gnmi.subscription]]
  #   name = "memory-summary/nodes/node/summary"
  #   origin = "Cisco-IOS-XR-nto-misc-oper"
  #   path = "memory-summary/nodes/node/summary"
  #   subscription_mode = "sample"
  #   sample_interval = "10s"

# gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
#   --path "Cisco-IOS-XR-ipv4-bgp-oper:bgp/instances/instance/" \
#   --mode stream --stream-mode sample

# gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
#   --path "rfc7951:/Cisco-IOS-XR-ipv4-bgp-oper:bgp/instances/instance/" \
#   --mode stream --stream-mode sample

# gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
#   --path "rfc7951:/Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary" \
#   --mode stream --stream-mode sample
# gnmic -a 198.18.133.1:57400 -u cisco -p cisco123 --insecure subscribe \
#   --path "/Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary" \
#   --mode stream --stream-mode sample

# gnmic -a 10.88.171.241:50052 -u admin -p 'Cxlabs!123' --insecure get --path "rfc7951:/Cisco-IOS-XE-interfaces-oper:interfaces/interface[name=TwentyFiveGigE1/1/2]/name"



# Name	instance
# Nodetype	list
# Description	Instance specific BGP data
# Module	Cisco-IOS-XR-ipv4-bgp-oper
# Revision	2023-02-03
# Xpath	/bgp/instances/instance
# Prefix	ipv4-bgp-oper
# Namespace	http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-bgp-oper
# Schema Node Id	/bgp/instances/instance
# Keys	
# "instance-name"
# Access	read-only
# Operations	
# "get"





  [inputs.gnmi.tags]
    telegraf_tag =  "gnmi"

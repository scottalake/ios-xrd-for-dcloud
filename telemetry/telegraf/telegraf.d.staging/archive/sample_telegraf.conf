Relevant telegraf.conf:
[[inputs.gnmi]]
  ## Address and port of the gNMI GRPC server
  addresses = ["XXXXXX:57500"]

  ## define credentials
  username = "admin"
  password = "cisco"
  ## gNMI encoding requested (one of: "proto", "json", "json_ietf", "bytes")
  encoding = "proto"
  ## redial in case of failures after
  redial = "10s"

  [[inputs.gnmi.subscription]]
    name = "health_uptime"
    origin = "Cisco-IOS-XR-shellutil-oper"
    path = "/system-time/uptime"
    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
    subscription_mode = "sample"
    sample_interval = "10s"

    [[inputs.gnmi.subscription]]
    name = "routing_isis_interface"
    origin = "Cisco-IOS-XR-clns-isis-oper"
    path = "/isis/instances/instance/interfaces/interface"
    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
    subscription_mode = "sample"
    sample_interval = "10s"

    [[inputs.gnmi.subscription]]
    name = "interface_bundles_oper"
    origin = "Cisco-IOS-XR-bundlemgr-oper"
    path = "/bundle-information/bundle/bundle-bundles/bundle-bundle/bundle-bundle-descendant"
    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "health_cpu_utilization"
    origin = "Cisco-IOS-XR-wdsysmon-fd-oper"
    path = "/system-monitoring/cpu-utilization"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "health_node_summary"
    origin = "Cisco-IOS-XR-nto-misc-oper"
    path = "/memory-summary/nodes/node/summary"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "interfaces_summary"
    origin = "Cisco-IOS-XR-pfi-im-cmd-oper"
    path = "/interfaces/interface-summary"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "interface_operation_state_brief"
    origin = "Cisco-IOS-XR-pfi-im-cmd-oper"
    path = "/interfaces/interface-briefs/interface-brief"
    subscription_mode = "sample"
    sample_interval = "10s"

        [[inputs.gnmi.subscription]]
    name = "interface_statistics_data_rate"
    origin = "Cisco-IOS-XR-infra-statsd-oper"
    path = "/infra-statistics/interfaces/interface/latest/data-rate"
    subscription_mode = "sample"
    sample_interval = "10s"

     [[inputs.gnmi.subscription]]
    name = "interface_statistics_generic_counters"
    origin = "Cisco-IOS-XR-infra-statsd-oper"
    path = "/infra-statistics/interfaces/interface/latest/generic-counters"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "qos_input"
    origin = "Cisco-IOS-XR-qos-ma-oper"
    path = "/qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics"
    # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "qos_output"
    origin = "Cisco-IOS-XR-qos-ma-oper"
    path = "/qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "routing_adjacency"
    origin = "Cisco-IOS-XR-clns-isis-oper"
    path = "/isis/instances/instance/levels/level/adjacencies/adjacency"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "routing_neighbor"
    origin = "Cisco-IOS-XR-ipv4-bgp-oper"
    path = "/bgp/instances/instance/instance-active/vrfs/vrf/neighbors/neighbor"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "routing_default_vrf"
    origin = "Cisco-IOS-XR-ipv4-bgp-oper"
    path = "/bgp/instances/instance/instance-active/default-vrf/neighbors/neighbor"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "optics_info"
    origin = "Cisco-IOS-XR-controller-optics-oper"
    path = "/optics-oper/optics-ports/optics-port/optics-info"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "environments_pem_attributes"
    origin = "Cisco-IOS-XR-sysadmin-envmon-ui"
    path = "/environment/oper/power/location/pem_attributes"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "environments_sensor_attributes"
    origin = "Cisco-IOS-XR-sysadmin-envmon-ui"
    path = "/environment/oper/temperatures/location/sensor_attributes"
    subscription_mode = "sample"
    sample_interval = "10s"
	
	[[inputs.gnmi.subscription]]
    name = "environments_fan_attributes"
    origin = "Cisco-IOS-XR-sysadmin-envmon-ui"
    path = "/environment/oper/fan/location/fan_attributes"
    subscription_mode = "sample"
    sample_interval = "10s"
	
# # A plugin that can transmit metrics over HTTP
[[outputs.http]]
#   ## URL is the address to send metrics to
  url = "https://ah-1105918-001.sdi.corp.bankofamerica.com:9005/routertosplunk"
#
#   ## Timeout for HTTP message
#   # timeout = "5s"
#
#   ## HTTP method, one of: "POST" or "PUT"
 method = "POST"
 
#
#   ## Optional TLS Config
#   # tls_ca = "/etc/telegraf/ca.pem"
#   # tls_cert = "/etc/telegraf/cert.pem"
#   # tls_key = "/etc/telegraf/key.pem"
#   ## Use TLS but skip chain & host verification
# insecure_skip_verify = false
#
#   ## Data format to output.
#   ## Each data format has it's own unique set of configuration options, read
#   ## more about them here:
#   ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
 data_format = "json"
 json_timestamp_units ="10ms"
#
#   ## HTTP Content-Encoding for write request body, can be set to "gzip" to
#   ## compress body or "identity" to apply no encoding.
#   # content_encoding = "identity"
#
#   ## Additional HTTP headers
  [outputs.http.headers]
#   #   # Should be set manually to "application/json" for json data_format
 Content-Type = "application/json"

[[outputs.file]]
 files = ["/etc/telegraf/metrics.out"]
data_format = "json"
json_timestamp_units = "10ms"